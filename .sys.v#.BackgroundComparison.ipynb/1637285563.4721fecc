{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "543e0ffb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.24/06\n"
     ]
    }
   ],
   "source": [
    "import root_pandas as rp\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "669dcbb5",
   "metadata": {},
   "outputs": [],
   "source": [
    "zz=rp.read_root('RootFiles/ZZBackground.root')\n",
    "other=rp.read_root('RootFiles/OtherBackground.root')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d21375de",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "alpha must be numeric or None, not <class 'str'>",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m/tmp/ipykernel_1959/1310127303.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzz\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'FourLepSystemM'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'b'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'0.5'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzz\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'FourLepSystemM'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'r'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'0.5'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mhist\u001b[0;34m(x, bins, range, density, weights, cumulative, bottom, histtype, align, orientation, rwidth, log, color, label, stacked, data, **kwargs)\u001b[0m\n\u001b[1;32m   2851\u001b[0m         \u001b[0morientation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'vertical'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrwidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2852\u001b[0m         label=None, stacked=False, *, data=None, **kwargs):\n\u001b[0;32m-> 2853\u001b[0;31m     return gca().hist(\n\u001b[0m\u001b[1;32m   2854\u001b[0m         \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbins\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbins\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdensity\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdensity\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweights\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mweights\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2855\u001b[0m         \u001b[0mcumulative\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcumulative\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbottom\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbottom\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhisttype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhisttype\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/__init__.py\u001b[0m in \u001b[0;36minner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1359\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minner\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1360\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1361\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msanitize_sequence\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1362\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1363\u001b[0m         \u001b[0mbound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_sig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mhist\u001b[0;34m(self, x, bins, range, density, weights, cumulative, bottom, histtype, align, orientation, rwidth, log, color, label, stacked, **kwargs)\u001b[0m\n\u001b[1;32m   6909\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mpatch\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6910\u001b[0m                 \u001b[0mp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpatch\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6911\u001b[0;31m                 \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6912\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mlbl\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6913\u001b[0m                     \u001b[0mp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_label\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlbl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mupdate\u001b[0;34m(self, props)\u001b[0m\n\u001b[1;32m   1062\u001b[0m                         raise AttributeError(f\"{type(self).__name__!r} object \"\n\u001b[1;32m   1063\u001b[0m                                              f\"has no property {k!r}\")\n\u001b[0;32m-> 1064\u001b[0;31m                     \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1065\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1066\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpchanged\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/patches.py\u001b[0m in \u001b[0;36mset_alpha\u001b[0;34m(self, alpha)\u001b[0m\n\u001b[1;32m    386\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mset_alpha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    387\u001b[0m         \u001b[0;31m# docstring inherited\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 388\u001b[0;31m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_alpha\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    389\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_facecolor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_facecolor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    390\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_edgecolor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_original_edgecolor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/cvmfs/sft.cern.ch/lcg/views/LCG_101swan/x86_64-centos7-gcc10-opt/lib/python3.9/site-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mset_alpha\u001b[0;34m(self, alpha)\u001b[0m\n\u001b[1;32m    960\u001b[0m         \"\"\"\n\u001b[1;32m    961\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0malpha\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 962\u001b[0;31m             raise TypeError(\n\u001b[0m\u001b[1;32m    963\u001b[0m                 f'alpha must be numeric or None, not {type(alpha)}')\n\u001b[1;32m    964\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0malpha\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0malpha\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: alpha must be numeric or None, not <class 'str'>"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(zz['FourLepSystemM'],bins=50,color='b',alpha='0.5')\n",
    "plt.hist(zz['FourLepSystemM'],bins=50,color='r',alpha='0.5')\n",
    "\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
