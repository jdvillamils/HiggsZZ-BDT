{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "18308091",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import root_pandas as rp\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e85f2f17",
   "metadata": {},
   "outputs": [],
   "source": [
    "sig=rp.read_root('RootFiles/DataTest.root','Signal')\n",
    "bck=rp.read_root('RootFiles/DataTest.root','Background')\n",
    "data=rp.read_root('RootFiles/DataSamples.root')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8873ce00",
   "metadata": {},
   "outputs": [],
   "source": [
    "sig['BDTval']=rp.read_root('RootFiles/TMVAppValues.root')\n",
    "data['BDTval']=rp.read_root('RootFiles/TMVAppValuesData.root')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "ff0faeb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "signalcut=sig[sig['BDTval']>-0.4]\n",
    "datacut=data[data['BDTval']>0.5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "ca424281",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(data['FourLepSystemM'],bins=300,color='b',alpha=0.4,label='Data without cuts')\n",
    "plt.hist(bck['FourLepSystemM'],weights=bck['Weight'],bins=1000,color='g',alpha=0.7,label='Background')\n",
    "plt.hist(signalcut['FourLepSystemM'],weights=signalcut['Weight'],bins=100,color='r',alpha=0.6,label='Signal')\n",
    "plt.xlim([50,300])\n",
    "plt.ylim([0,17])\n",
    "plt.text(110,16,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(110,15, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(110,13.5,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(110,12,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[0], handles[2], handles[1]]\n",
    "labels = [labels[0], labels[2], labels[1]]\n",
    "ax.legend(handles,labels)\n",
    "plt.savefig(\"images/fourmassnocuts.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "d7e0f701",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bck['FourLepSystemM'],weights=bck['Weight'],bins=1000,color='g',alpha=0.7,label='Background')\n",
    "plt.hist(signalcut['FourLepSystemM'],weights=signalcut['Weight'],bins=100,color='r',alpha=0.7,label='Signal')\n",
    "plt.hist(datacut['FourLepSystemM'],weights=datacut['Weight'],bins=50,color='b',alpha=0.55,label='Data')\n",
    "plt.xlim([55,300])\n",
    "plt.ylim([0,10])\n",
    "plt.text(140,9.5,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(140,8.8, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(140,7.8,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(140,6.8,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[2], handles[1], handles[0]]\n",
    "labels = [labels[2], labels[1], labels[0]]\n",
    "ax.legend(handles,labels)\n",
    "#plt.savefig(\"images/fourmass.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "6ebe8bc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(bck['FourLepSystempt'],weights=bck['Weight'],bins=2000,alpha=0.7)\n",
    "plt.hist(signalcut['FourLepSystempt'],weights=signalcut['Weight'],bins=150,alpha=0.7)\n",
    "#plt.hist(data['FourLepSystempt'],bins=300,color='b',alpha=0.4,label='Data without cuts')\n",
    "plt.hist(datacut['FourLepSystempt'],weights=datacut['Weight'],bins=60,alpha=0.7)\n",
    "plt.xlim([0,200])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c35eb0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(bck['FourLepSystemE'],weights=bck['Weight'],bins=1000,alpha=0.7)\n",
    "plt.hist(signalcut['FourLepSystemE'],weights=signalcut['Weight'],bins=400,alpha=0.7)\n",
    "plt.hist(datacut['FourLepSystemE'],weights=datacut['Weight'],bins=20,alpha=0.7)\n",
    "plt.xlim([0,400])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "8e5c8b7f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(datacut['InvMassZ1'],weights=datacut['Weight'],bins=50,alpha=0.7)\n",
    "plt.hist(signalcut['InvMassZ1'],weights=signalcut['Weight'],bins=100,alpha=0.7)\n",
    "plt.hist(bck['InvMassZ1'],weights=bck['Weight'],bins=1000,alpha=0.7)\n",
    "plt.xlim([0,120])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "497313d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(datacut['InvMassZ2'],weights=datacut['Weight'],bins=50,alpha=0.7)\n",
    "plt.hist(signalcut['InvMassZ2'],weights=signalcut['Weight'],bins=100,alpha=0.7)\n",
    "plt.hist(bck['InvMassZ2'],weights=bck['Weight'],bins=1000,alpha=0.7)\n",
    "plt.xlim([0,130])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "261470dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bckmc['FourLepSystemM'],weights=bckmc['Weight'],bins=50,facecolor='r',alpha=0.8,label='Background')\n",
    "plt.hist(signalcut['FourLepSystemM'],weights=signalcut['Weight'],bins=50,facecolor='b',alpha=0.6,label='Signal')\n",
    "#plt.hist(signaldata['FourLepSystemM'],density=1,bins=100,facecolor='g',alpha=0.7,label='Data')\n",
    "#plt.hist(datanocut['FourLepSystemM'],bins=50,facecolor='cyan',alpha=0.5,label='Data without cuts')\n",
    "#plt.text(120,0.055,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "#plt.text(165,0.055, 'Preliminary Open Data', fontsize=10)\n",
    "#plt.text(150,0.050,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "#plt.text(150,0.045,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "#plt.xlim([100,400])\n",
    "#plt.ylim([0,0.06])\n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System Mass [GeV]')\n",
    "#handles,labels = ax.get_legend_handles_labels()\n",
    "#handles = [handles[2], handles[1], handles[0]]\n",
    "#labels = [labels[2], labels[1], labels[0]]\n",
    "#ax.legend(handles,labels)\n",
    "#plt.savefig(\"images/fourmass.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12169400",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bckmc['FourLepSystempt'],bins=50,density=1,facecolor='r',alpha=0.6,label='Background')\n",
    "plt.hist(signalcut['FourLepSystempt'],bins=50,density=1,facecolor='b',alpha=0.6,label='Signal')\n",
    "plt.hist(signaldata['FourLepSystempt'],bins=30,density=1,facecolor='g',alpha=0.7,label='Data')\n",
    "plt.text(45,0.026,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(77,0.026, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(45,0.024,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(45,0.022,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System Transverse Momentum [GeV]')\n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[2], handles[1], handles[0]]\n",
    "labels = [labels[2], labels[1], labels[0]]\n",
    "ax.legend(handles,labels)\n",
    "plt.xlim([0,230])\n",
    "plt.savefig(\"images/fourpt.png\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de2ae95a",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bckmc['InvMassZ1'],bins=60,density=1,facecolor='r',alpha=0.6,label='Background')\n",
    "plt.hist(signalcut['InvMassZ1'],bins=50,density=1,facecolor='b',alpha=0.6,label='Signal')\n",
    "plt.hist(signaldata['InvMassZ1'],bins=30,density=1,facecolor='g',alpha=0.6,label='Data')\n",
    "plt.text(6,0.05,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(8,0.0475, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(6,0.0425,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(6,0.038,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Invariant Mass Z1 [GeV]')\n",
    "plt.xlim([0,200])\n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[2], handles[1], handles[0]]\n",
    "labels = [labels[2], labels[1], labels[0]]\n",
    "ax.legend(handles,labels)\n",
    "plt.savefig(\"images/invz1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9eeb6df",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bckmc['InvMassZ2'],bins=200,density=1,facecolor='r',alpha=0.6,label='Background')\n",
    "plt.hist(signalcut['InvMassZ2'],bins=50,density=1,facecolor='b',alpha=0.6,label='Signal')\n",
    "plt.hist(signaldata['InvMassZ2'],bins=100,density=1,facecolor='g',alpha=0.7,label='Data')\n",
    "plt.text(50,0.039,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(88,0.039, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(50,0.035,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(50,0.032,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Invariant Mass Z2 [GeV]')\n",
    "plt.xlim([0,270])\n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[2], handles[1], handles[0]]\n",
    "labels = [labels[2], labels[1], labels[0]]\n",
    "ax.legend(handles,labels)\n",
    "plt.savefig(\"images/invz2.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "26c0f644",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(signalcut['FourLepRapidity'],bins=50,density=1,facecolor='g',alpha=0.5,label='Signal')\n",
    "plt.hist(bckmc['FourLepRapidity'],bins=50,density=1,facecolor='b',alpha=0.3,label='Background')\n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System pt [GeV]')\n",
    "#plt.savefig(\"figure1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12d83144",
   "metadata": {},
   "outputs": [],
   "source": [
    "fig,ax = plt.subplots(1)\n",
    "plt.hist(bckmc['FourLepSystemE'],bins=50,density=1,facecolor='r',alpha=0.6,label='Background')\n",
    "plt.hist(signalcut['FourLepSystemE'],bins=50,density=1,facecolor='b',alpha=0.6,label='Signal')\n",
    "plt.hist(signaldata['FourLepSystemE'],bins=20,density=1,facecolor='g',alpha=0.7,label='Data')\n",
    "plt.text(250,0.0062,'ATLAS', weight='bold',style='italic',fontsize=13 ) \n",
    "plt.text(420,0.0062, 'Preliminary Open Data', fontsize=10)\n",
    "plt.text(250,0.0055,'$\\sqrt{s}$=13 TeV, 10 fb$^{-1}$',fontsize=9 ) \n",
    "plt.text(250,0.0050,'H$\\longrightarrow$ZZ*$\\longrightarrow$4l',fontsize=9 ) \n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System Energy [GeV]')\n",
    "plt.xlim([0,1200])\n",
    "handles,labels = ax.get_legend_handles_labels()\n",
    "handles = [handles[2], handles[1], handles[0]]\n",
    "labels = [labels[2], labels[1], labels[0]]\n",
    "ax.legend(handles,labels)\n",
    "plt.savefig(\"images/foure.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "763d3e9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(signal['FourLepSystemM'],bins=50,density=1,facecolor='r',alpha=0.4,label='Signal from BDT')\n",
    "plt.hist(signall['FourLepSystemM'],bins=50,density=1,facecolor='b',alpha=0.5,label='Real Signal')\n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System M [GeV]')\n",
    "plt.savefig(\"figure3.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c612bd67",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(signal['FourLepSystempt'],bins=50,density=1,facecolor='r',alpha=0.4,label='Signal from BDT')\n",
    "plt.hist(signall['FourLepSystempt'],bins=50,density=1,facecolor='b',alpha=0.3,label='Real Signal')\n",
    "plt.legend(loc='upper right')\n",
    "plt.xlabel(r'Four Lepton System pt [GeV]')\n",
    "plt.savefig(\"figure4.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c643f4f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "h125=rp.read_root('RootFiles/DataTest.root','Signal')\n",
    "\n",
    "plt.hist(h125['InvMassZ2'],bins=50)\n",
    "#plt.hist(bckmc['InvMassZ2'],bins=200)\n",
    "plt.xlim([0,100])\n",
    "plt.show()\n",
    "                  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "318c7451",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(signaldata['InvMassZ2'],bins=100,density=1,facecolor='r',alpha=0.7,label='Data with bdt cut -0.7')\n",
    "plt.hist(datanocut['InvMassZ2'],bins=100,density=1,facecolor='cyan',alpha=0.8,label='Data without cuts')\n",
    "plt.xlim([0,220])\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96bd6352",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(signaldata['InvMassZ2'],bins=100,density=1,facecolor='r',alpha=0.7,label='Data with bdt cut -0.4')\n",
    "plt.hist(datanocut['InvMassZ2'],bins=100,density=1,facecolor='cyan',alpha=0.8,label='Data without cuts')\n",
    "plt.xlim([0,220])\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
