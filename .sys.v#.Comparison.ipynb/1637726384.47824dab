{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "935ffcab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to JupyROOT 6.24/06\n"
     ]
    }
   ],
   "source": [
    "import root_pandas as rp\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40c1c066",
   "metadata": {},
   "source": [
    "The comparison between background from ZZ and background from other processes, shows how insignificant are these last ones. Representing less than 1% of the total background."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "1d79b9df",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (446237153.py, line 5)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"/tmp/ipykernel_7304/446237153.py\"\u001b[0;36m, line \u001b[0;32m5\u001b[0m\n\u001b[0;31m    sig=rp.read_root('RootFiles/DataTest.root','Signal')\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "data=rp.read_root('RootFiles/DataSamples.root')\n",
    "data['BDTval']=rp.read_root('RootFiles/TMVAppValuesData.root')\n",
    "datacut=data[data['BDTval']>-0.4]\n",
    "print(len(datacut)\n",
    "sig=rp.read_root('RootFiles/DataTest.root','Signal')\n",
    "bc=rp.read_root('RootFiles/DataTest.root', 'Background')\n",
    "plt.hist(datacut['FourLepSystemM'],bins=50,alpha=0.7)\n",
    "plt.hist(sig['FourLepSystemM'],weights=sig['Weight'],bins=100,alpha=0.7)\n",
    "plt.hist(bc['FourLepSystemM'],weights=bc['Weight'],bins=1000,alpha=0.7)\n",
    "plt.xlim([0,400])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b579218c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(datacut['FourLepSystempt'],bins=50,alpha=0.7)\n",
    "plt.hist(sig['FourLepSystempt'],weights=sig['Weight'],bins=100,alpha=0.7)\n",
    "plt.hist(bc['FourLepSystempt'],weights=bc['Weight'],bins=1000,alpha=0.7)\n",
    "plt.xlim([0,250])\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
